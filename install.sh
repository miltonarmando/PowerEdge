#!/bin/bash

# Script de instala√ß√£o do PowerEdge para Raspberry Pi
# Execute com: chmod +x install.sh && ./install.sh

echo "üîã PowerEdge - Script de Instala√ß√£o"
echo "===================================="

# Verificar se est√° rodando no Raspberry Pi
if ! grep -q "Raspberry Pi" /proc/cpuinfo 2>/dev/null; then
    echo "‚ö†Ô∏è  Aviso: Este script foi projetado para Raspberry Pi"
    read -p "Deseja continuar mesmo assim? (y/N): " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        exit 1
    fi
fi

# Atualizar sistema
echo "üì¶ Atualizando sistema..."
sudo apt update && sudo apt upgrade -y

# Instalar depend√™ncias do sistema
echo "üîß Instalando depend√™ncias do sistema..."
sudo apt install -y python3 python3-pip python3-venv git i2c-tools

# Habilitar I2C
echo "üîó Habilitando I2C..."
sudo raspi-config nonint do_i2c 0

# Criar ambiente virtual
echo "üêç Criando ambiente virtual Python..."
python3 -m venv venv
source venv/bin/activate

# Instalar depend√™ncias Python
echo "üìö Instalando depend√™ncias Python..."
pip install --upgrade pip
pip install -r requirements.txt

# Criar diret√≥rios necess√°rios
echo "üìÅ Criando estrutura de diret√≥rios..."
mkdir -p logs
mkdir -p backups

# Criar arquivo de configura√ß√£o local
echo "‚öôÔ∏è  Criando configura√ß√£o local..."
cat > .env << EOF
# Configura√ß√µes locais do PowerEdge
DATABASE_PATH=energia.db
LOG_LEVEL=INFO
LOG_FILE=logs/energia.log
LIMIAR_TENSAO=0.8
INTERVALO_LEITURA=1.0
FLASK_HOST=0.0.0.0
FLASK_PORT=5000
WEBSOCKET_HOST=0.0.0.0
WEBSOCKET_PORT=8765
EOF

# Criar script de inicializa√ß√£o
echo "üöÄ Criando script de inicializa√ß√£o..."
cat > run.sh << 'EOF'
#!/bin/bash
cd "$(dirname "$0")"
source venv/bin/activate
python app/run.py
EOF
chmod +x run.sh

# Criar servi√ßo systemd
echo "üîÑ Criando servi√ßo systemd..."
sudo tee /etc/systemd/system/poweredge.service > /dev/null << EOF
[Unit]
Description=PowerEdge - Sistema de Monitoramento de Energia
After=network.target

[Service]
Type=simple
User=pi
WorkingDirectory=$(pwd)
Environment=PATH=$(pwd)/venv/bin
ExecStart=$(pwd)/venv/bin/python $(pwd)/app/run.py
Restart=always
RestartSec=10

[Install]
WantedBy=multi-user.target
EOF

# Testar I2C
echo "üîç Testando I2C..."
if i2cdetect -y 1 | grep -q "48\|49\|4a\|4b"; then
    echo "‚úÖ ADS1115 detectado no barramento I2C"
else
    echo "‚ö†Ô∏è  ADS1115 n√£o detectado. Verifique as conex√µes:"
    echo "   VDD -> 3.3V"
    echo "   GND -> GND"
    echo "   SCL -> GPIO 3 (Pin 5)"
    echo "   SDA -> GPIO 2 (Pin 3)"
    echo "   ADDR -> GND (endere√ßo 0x48)"
fi

# Testar instala√ß√£o
echo "üß™ Testando instala√ß√£o..."
if python app/run.py --test 2>/dev/null; then
    echo "‚úÖ Instala√ß√£o bem-sucedida!"
else
    echo "‚ö†Ô∏è  Teste b√°sico passou, mas execute manualmente para verificar"
fi

echo ""
echo "üéâ Instala√ß√£o conclu√≠da!"
echo ""
echo "Para iniciar o sistema:"
echo "  ./run.sh"
echo ""
echo "Para habilitar inicializa√ß√£o autom√°tica:"
echo "  sudo systemctl enable poweredge"
echo "  sudo systemctl start poweredge"
echo ""
echo "Para monitorar logs:"
echo "  tail -f logs/energia.log"
echo ""
echo "Interface web estar√° dispon√≠vel em:"
echo "  http://$(hostname -I | awk '{print $1}'):5000"
echo ""
echo "WebSocket para dados em tempo real:"
echo "  ws://$(hostname -I | awk '{print $1}'):8765"
