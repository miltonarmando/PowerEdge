#!/bin/bash

# Script para configurar ambiente Python no Raspberry Pi
# Execute este script ANTES da instala√ß√£o principal

echo "üêç Configura√ß√£o do Ambiente Python para PowerEdge"
echo "================================================="

# Verificar vers√£o do Python
python_version=$(python3 --version 2>&1)
echo "Vers√£o do Python: $python_version"

if [[ ! "$python_version" =~ "Python 3" ]]; then
    echo "‚ùå Python 3 √© necess√°rio!"
    exit 1
fi

# Instalar pip se n√£o estiver instalado
if ! command -v pip3 &> /dev/null; then
    echo "üì¶ Instalando pip..."
    sudo apt update
    sudo apt install -y python3-pip
fi

# Instalar desenvolvimento e ferramentas de sistema
echo "üîß Instalando ferramentas de desenvolvimento..."
sudo apt install -y \
    python3-dev \
    python3-venv \
    build-essential \
    git \
    i2c-tools \
    libi2c-dev

# Configurar permiss√µes I2C para usu√°rio pi
echo "üîê Configurando permiss√µes I2C..."
sudo usermod -a -G i2c pi

# Habilitar I2C no boot
echo "‚öôÔ∏è  Habilitando I2C no boot..."
sudo raspi-config nonint do_i2c 0

# Verificar se I2C est√° funcionando
echo "üîç Verificando I2C..."
if ls /dev/i2c* 1> /dev/null 2>&1; then
    echo "‚úÖ I2C habilitado com sucesso"
    echo "Dispositivos I2C dispon√≠veis:"
    ls -la /dev/i2c*
else
    echo "‚ö†Ô∏è  I2C pode n√£o estar configurado corretamente"
    echo "Reinicie o sistema e execute novamente"
fi

# Verificar GPIO
echo "üîå Verificando GPIO..."
if [ -d "/sys/class/gpio" ]; then
    echo "‚úÖ GPIO dispon√≠vel"
else
    echo "‚ö†Ô∏è  GPIO pode n√£o estar acess√≠vel"
fi

echo ""
echo "‚úÖ Configura√ß√£o b√°sica conclu√≠da!"
echo ""
echo "‚ö†Ô∏è  IMPORTANTE: Reinicie o sistema antes de prosseguir:"
echo "   sudo reboot"
echo ""
echo "Ap√≥s a reinicializa√ß√£o, execute:"
echo "   ./install.sh"
