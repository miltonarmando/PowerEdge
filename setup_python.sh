#!/bin/bash

# Script para configurar ambiente Python no Raspberry Pi
# Execute este script ANTES da instala√ß√£o principal

echo "üêç Configura√ß√£o do Ambiente Python para PowerEdge"
echo "================================================="

# Verificar vers√£o do Python
python_version=$(python3 --version 2>&1)
echo "Vers√£o do Python: $python_version"

if [[ ! "$python_version" =~ "Python 3" ]]; then
    echo "‚ùå Python 3 √© necess√°rio!"
    exit 1
fi

# Instalar pip se n√£o estiver instalado
if ! command -v pip3 &> /dev/null; then
    echo "üì¶ Instalando pip..."
    sudo apt update
    sudo apt install -y python3-pip
fi

# Instalar desenvolvimento e ferramentas de sistema
echo "üîß Instalando ferramentas de desenvolvimento..."
sudo apt install -y \
    python3-dev \
    python3-venv \
    build-essential \
    git \
    i2c-tools \
    libi2c-dev

# Configurar permiss√µes I2C para usu√°rio pi
echo "üîê Configurando permiss√µes I2C..."
sudo usermod -a -G i2c pi

# Garantir que m√≥dulos I2C estejam carregados
echo "üì° Carregando m√≥dulos I2C..."
sudo modprobe i2c-dev 2>/dev/null || true
sudo modprobe i2c-bcm2835 2>/dev/null || true

# Habilitar I2C no boot
echo "‚öôÔ∏è  Habilitando I2C no boot..."
if sudo raspi-config nonint do_i2c 0; then
    echo "‚úÖ I2C habilitado via raspi-config"
else
    echo "‚ö†Ô∏è  raspi-config falhou, tentando m√©todo alternativo..."
    # M√©todo alternativo para sistemas mais novos
    for config_file in "/boot/firmware/config.txt" "/boot/config.txt"; do
        if [ -f "$config_file" ]; then
            echo "üìù Configurando I2C em $config_file"
            # Remover linhas existentes para evitar duplica√ß√£o
            sudo sed -i '/^dtparam=i2c_arm=on/d' "$config_file"
            sudo sed -i '/^dtparam=i2c1=on/d' "$config_file"
            # Adicionar configura√ß√£o I2C
            echo "dtparam=i2c_arm=on" | sudo tee -a "$config_file"
            echo "dtparam=i2c1=on" | sudo tee -a "$config_file"
            echo "‚úÖ I2C configurado em $config_file"
            break
        fi
    done
fi

# Verificar se I2C est√° funcionando
echo "üîç Verificando I2C..."

# Verificar dispositivos I2C
if ls /dev/i2c* 1> /dev/null 2>&1; then
    echo "‚úÖ I2C habilitado com sucesso"
    echo "Dispositivos I2C dispon√≠veis:"
    ls -la /dev/i2c*
    
    # Verificar m√≥dulos I2C carregados
    echo ""
    echo "üîç Verificando m√≥dulos I2C carregados..."
    if lsmod | grep -q i2c; then
        echo "‚úÖ M√≥dulos I2C carregados:"
        lsmod | grep i2c
    else
        echo "‚ö†Ô∏è  M√≥dulos I2C n√£o carregados"
    fi
    
    # Testar scanner I2C se dispon√≠vel
    echo ""
    echo "üîç Testando scanner I2C..."
    if command -v i2cdetect &> /dev/null; then
        echo "Executando: i2cdetect -y 1"
        if i2cdetect -y 1 2>/dev/null; then
            echo "‚úÖ Scanner I2C executado com sucesso"
            echo "üìä Procure por dispositivos nos endere√ßos 48-4B (ADS1115)"
        else
            echo "‚ö†Ô∏è  Scanner I2C falhou - verifique permiss√µes"
        fi
    else
        echo "‚ö†Ô∏è  i2cdetect n√£o dispon√≠vel"
    fi
else
    echo "‚ùå I2C n√£o est√° funcionando!"
    echo ""
    echo "üîß Diagn√≥stico do problema:"
    
    # Verificar se raspi-config est√° dispon√≠vel
    if command -v raspi-config &> /dev/null; then
        echo "‚úÖ raspi-config dispon√≠vel"
    else
        echo "‚ùå raspi-config n√£o encontrado"
    fi
    
    # Verificar arquivos de configura√ß√£o
    echo ""
    echo "üìÅ Verificando arquivos de configura√ß√£o:"
    for config_file in "/boot/firmware/config.txt" "/boot/config.txt"; do
        if [ -f "$config_file" ]; then
            echo "‚úÖ $config_file encontrado"
            if grep -q "dtparam=i2c_arm=on" "$config_file"; then
                echo "  ‚úÖ I2C configurado em $config_file"
            else
                echo "  ‚ùå I2C N√ÉO configurado em $config_file"
            fi
        else
            echo "‚ùå $config_file n√£o encontrado"
        fi
    done
    
    echo ""
    echo "üîÑ SOLU√á√ÉO: Reinicie o sistema e execute novamente"
    echo "   sudo reboot"
    echo ""
    echo "Se o problema persistir, execute manualmente:"
    echo "   sudo raspi-config"
    echo "   ‚Üí 3 Interface Options ‚Üí I2C ‚Üí Yes"
fi

# Verificar GPIO
echo "üîå Verificando GPIO..."
if [ -d "/sys/class/gpio" ]; then
    echo "‚úÖ GPIO dispon√≠vel"
else
    echo "‚ö†Ô∏è  GPIO pode n√£o estar acess√≠vel"
fi

echo ""
echo "‚úÖ Configura√ß√£o b√°sica conclu√≠da!"
echo ""
echo "‚ö†Ô∏è  IMPORTANTE: Reinicie o sistema antes de prosseguir:"
echo "   sudo reboot"
echo ""
echo "Ap√≥s a reinicializa√ß√£o, execute:"
echo "   ./install.sh"
